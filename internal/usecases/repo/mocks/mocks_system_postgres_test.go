// Code generated by MockGen. DO NOT EDIT.
// Source: system_postgres.go
//
// Generated by this command:
//
//	mockgen -source=system_postgres.go -destination=./mocks/mocks_system_postgres_test.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	pb "github.com/chindada/panther/golang/pb"
	gomock "go.uber.org/mock/gomock"
)

// MockSystemRepo is a mock of SystemRepo interface.
type MockSystemRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSystemRepoMockRecorder
	isgomock struct{}
}

// MockSystemRepoMockRecorder is the mock recorder for MockSystemRepo.
type MockSystemRepoMockRecorder struct {
	mock *MockSystemRepo
}

// NewMockSystemRepo creates a new mock instance.
func NewMockSystemRepo(ctrl *gomock.Controller) *MockSystemRepo {
	mock := &MockSystemRepo{ctrl: ctrl}
	mock.recorder = &MockSystemRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSystemRepo) EXPECT() *MockSystemRepoMockRecorder {
	return m.recorder
}

// InsertSetting mocks base method.
func (m *MockSystemRepo) InsertSetting(ctx context.Context, s *pb.SystemSetting) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertSetting", ctx, s)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertSetting indicates an expected call of InsertSetting.
func (mr *MockSystemRepoMockRecorder) InsertSetting(ctx, s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertSetting", reflect.TypeOf((*MockSystemRepo)(nil).InsertSetting), ctx, s)
}

// SelectSetting mocks base method.
func (m *MockSystemRepo) SelectSetting(ctx context.Context, key pb.SettingKey) (*pb.SystemSetting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectSetting", ctx, key)
	ret0, _ := ret[0].(*pb.SystemSetting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectSetting indicates an expected call of SelectSetting.
func (mr *MockSystemRepoMockRecorder) SelectSetting(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectSetting", reflect.TypeOf((*MockSystemRepo)(nil).SelectSetting), ctx, key)
}

// UpdateSetting mocks base method.
func (m *MockSystemRepo) UpdateSetting(ctx context.Context, s *pb.SystemSetting) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSetting", ctx, s)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSetting indicates an expected call of UpdateSetting.
func (mr *MockSystemRepoMockRecorder) UpdateSetting(ctx, s any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSetting", reflect.TypeOf((*MockSystemRepo)(nil).UpdateSetting), ctx, s)
}
