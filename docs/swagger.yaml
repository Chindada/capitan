definitions:
  emptypb.Empty:
    type: object
  pb.APIResponse:
    properties:
      code:
        type: integer
      response:
        type: string
    type: object
  pb.Backup:
    properties:
      created_at:
        $ref: '#/definitions/timestamppb.Timestamp'
      name:
        type: string
      path:
        type: string
    type: object
  pb.BackupList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.Backup'
        type: array
    type: object
  pb.BasicUser:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/pb.UserRole'
      username:
        type: string
    type: object
  pb.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    type: object
  pb.FetchStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - FetchStatus_FETCH_STATUS_UNKNOWN
    - FetchStatus_FETCH_STATUS_FETCHED
    - FetchStatus_FETCH_STATUS_FETCHING
    - FetchStatus_FETCH_STATUS_UNFETCH
  pb.FutureDetail:
    properties:
      category:
        type: string
      code:
        type: string
      currency:
        type: string
      day_trade:
        type: string
      delivery_date:
        type: string
      delivery_month:
        type: string
      exchange:
        type: string
      limit_down:
        type: number
      limit_up:
        type: number
      margin_trading_balance:
        type: integer
      multiplier:
        type: integer
      name:
        type: string
      option_right:
        type: string
      reference:
        type: number
      security_type:
        type: string
      short_selling_balance:
        type: integer
      strike_price:
        type: integer
      symbol:
        type: string
      target_code:
        type: string
      underlying_code:
        type: string
      underlying_kind:
        type: string
      unit:
        type: integer
      update_date:
        type: string
    type: object
  pb.FutureDetailList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.FutureDetail'
        type: array
    type: object
  pb.FuturePosition:
    properties:
      code:
        type: string
      direction:
        $ref: '#/definitions/pb.OrderAction'
      id:
        type: integer
      last_price:
        type: number
      pnl:
        type: number
      price:
        type: number
      quantity:
        type: integer
    type: object
  pb.FuturePositionList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.FuturePosition'
        type: array
    type: object
  pb.HistoryKbar:
    properties:
      close:
        type: number
      code:
        type: string
      high:
        type: number
      kbar_time:
        $ref: '#/definitions/timestamppb.Timestamp'
      low:
        type: number
      open:
        type: number
      volume:
        type: integer
    type: object
  pb.HistoryKbarList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.HistoryKbar'
        type: array
    type: object
  pb.LoginEvent:
    properties:
      created_at:
        $ref: '#/definitions/timestamppb.Timestamp'
      id:
        type: integer
      ip:
        type: string
      resp_code:
        $ref: '#/definitions/pb.LoginRespCode'
      user:
        $ref: '#/definitions/pb.User'
    type: object
  pb.LoginEventList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.LoginEvent'
        type: array
    type: object
  pb.LoginRequest:
    properties:
      mfa_code:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  pb.LoginRespCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - LoginRespCode_OK
    - LoginRespCode_PASSWORD_INCORRECT
    - LoginRespCode_USER_NOT_FOUND
    - LoginRespCode_DB_ERROR
    - LoginRespCode_MFA_FAILED
  pb.LoginResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  pb.Margin:
    properties:
      available_margin:
        type: number
      collateral_amount:
        type: number
      deposit_withdrawal:
        type: number
      equity:
        type: number
      equity_amount:
        type: number
      fee:
        type: number
      future_open_position:
        type: number
      future_settle_profitloss:
        type: number
      initial_margin:
        type: number
      maintenance_margin:
        type: number
      margin_call:
        type: number
      option_open_position:
        type: number
      option_openbuy_market_value:
        type: number
      option_opensell_market_value:
        type: number
      option_settle_profitloss:
        type: number
      order_margin_premium:
        type: number
      plus_margin:
        type: number
      plus_margin_indicator:
        type: number
      risk_indicator:
        type: number
      royalty_revenue_expenditure:
        type: number
      security_collateral_amount:
        type: number
      status:
        $ref: '#/definitions/pb.FetchStatus'
      tax:
        type: number
      today_balance:
        type: number
      today_future_open_position:
        type: number
      yesterday_balance:
        type: number
    type: object
  pb.OptionDetail:
    properties:
      category:
        type: string
      code:
        type: string
      currency:
        type: string
      day_trade:
        type: string
      delivery_date:
        type: string
      delivery_month:
        type: string
      exchange:
        type: string
      limit_down:
        type: number
      limit_up:
        type: number
      margin_trading_balance:
        type: integer
      multiplier:
        type: integer
      name:
        type: string
      option_right:
        type: string
      reference:
        type: number
      security_type:
        type: string
      short_selling_balance:
        type: integer
      strike_price:
        type: number
      symbol:
        type: string
      target_code:
        type: string
      underlying_code:
        type: string
      underlying_kind:
        type: string
      unit:
        type: integer
      update_date:
        type: string
    type: object
  pb.OptionDetailList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.OptionDetail'
        type: array
    type: object
  pb.OrderAction:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - OrderAction_ORDER_ACTION_UNKNOWN
    - OrderAction_ORDER_ACTION_BUY
    - OrderAction_ORDER_ACTION_SELL
  pb.OrderDetail:
    properties:
      action:
        $ref: '#/definitions/pb.OrderAction'
      code:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  pb.OrderStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    type: integer
    x-enum-varnames:
    - OrderStatus_ORDER_STATUS_UNKNOWN
    - OrderStatus_ORDER_STATUS_CANCELLED
    - OrderStatus_ORDER_STATUS_FILLED
    - OrderStatus_ORDER_STATUS_PART_FILLED
    - OrderStatus_ORDER_STATUS_INACTIVE
    - OrderStatus_ORDER_STATUS_FAILED
    - OrderStatus_ORDER_STATUS_PENDING_SUBMIT
    - OrderStatus_ORDER_STATUS_PRE_SUBMITTED
    - OrderStatus_ORDER_STATUS_SUBMITTED
  pb.OrderType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - OrderType_TYPE_UNKNOWN
    - OrderType_TYPE_STOCK_LOT
    - OrderType_TYPE_STOCK_SHARE
    - OrderType_TYPE_FUTURE
    - OrderType_TYPE_OPTION
  pb.QueryTradeRequest:
    properties:
      end_time:
        $ref: '#/definitions/timestamppb.Timestamp'
      order_id:
        type: string
      start_time:
        $ref: '#/definitions/timestamppb.Timestamp'
    type: object
  pb.ShioajiEvent:
    properties:
      created_at:
        $ref: '#/definitions/timestamppb.Timestamp'
      event:
        type: string
      event_code:
        type: integer
      info:
        type: string
      resp_code:
        type: integer
    type: object
  pb.ShioajiEventList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.ShioajiEvent'
        type: array
    type: object
  pb.StockDetail:
    properties:
      category:
        type: string
      code:
        type: string
      currency:
        type: string
      day_trade:
        type: string
      delivery_date:
        type: string
      delivery_month:
        type: string
      exchange:
        type: string
      limit_down:
        type: number
      limit_up:
        type: number
      margin_trading_balance:
        type: integer
      multiplier:
        type: integer
      name:
        type: string
      option_right:
        type: string
      reference:
        type: number
      security_type:
        type: string
      short_selling_balance:
        type: integer
      strike_price:
        type: integer
      symbol:
        type: string
      target_code:
        type: string
      underlying_code:
        type: string
      underlying_kind:
        type: string
      unit:
        type: integer
      update_date:
        type: string
    type: object
  pb.StockDetailList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.StockDetail'
        type: array
    type: object
  pb.SystemBuild:
    properties:
      commit:
        type: string
      version:
        type: string
    type: object
  pb.SystemInfo:
    properties:
      core:
        $ref: '#/definitions/pb.SystemBuild'
      disk_usage:
        type: number
      launch_time:
        $ref: '#/definitions/timestamppb.Timestamp'
      web:
        $ref: '#/definitions/pb.SystemBuild'
    type: object
  pb.Trade:
    properties:
      action:
        $ref: '#/definitions/pb.OrderAction'
      code:
        type: string
      filled_quantity:
        type: integer
      future:
        $ref: '#/definitions/pb.FutureDetail'
      option:
        $ref: '#/definitions/pb.OptionDetail'
      order_id:
        type: string
      order_time:
        $ref: '#/definitions/timestamppb.Timestamp'
      price:
        type: number
      quantity:
        type: integer
      status:
        $ref: '#/definitions/pb.OrderStatus'
      stock:
        $ref: '#/definitions/pb.StockDetail'
      type:
        $ref: '#/definitions/pb.OrderType'
      uid:
        type: string
    type: object
  pb.TradeList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.Trade'
        type: array
    type: object
  pb.User:
    properties:
      basic:
        $ref: '#/definitions/pb.BasicUser'
      created_at:
        $ref: '#/definitions/timestamppb.Timestamp'
      enable_totp:
        type: boolean
      id:
        type: integer
      totp_id:
        type: integer
      updated_at:
        $ref: '#/definitions/timestamppb.Timestamp'
    type: object
  pb.UserList:
    properties:
      list:
        items:
          $ref: '#/definitions/pb.User'
        type: array
    type: object
  pb.UserRole:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - UserRole_UNKNOWN
    - UserRole_USER
    - UserRole_ADMIN
    - UserRole_ROOT
  timestamppb.Timestamp:
    properties:
      nanos:
        description: |-
          Non-negative fractions of a second at nanosecond resolution. Negative
          second values with fractions must still have non-negative nanos values
          that count forward in time. Must be from 0 to 999,999,999
          inclusive.
        type: integer
      seconds:
        description: |-
          Represents seconds of UTC time since Unix epoch
          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
          9999-12-31T23:59:59Z inclusive.
        type: integer
    type: object
info:
  contact: {}
  description: Capitan V1 Srv's API docs
  title: Capitan V1 OpenAPI
  version: v0.0
paths:
  /api/capitan/v1/basic/future/kbar:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.HistoryKbarList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get futures
      tags:
      - Basic V1
  /api/capitan/v1/basic/futures:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FutureDetailList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get futures
      tags:
      - Basic V1
  /api/capitan/v1/basic/options:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.OptionDetailList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get options
      tags:
      - Basic V1
  /api/capitan/v1/basic/stocks:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.StockDetailList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get stocks
      tags:
      - Basic V1
  /api/capitan/v1/basic/target/future:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FutureDetailList'
      security:
      - JWT: []
      summary: Get target futures
      tags:
      - Basic V1
  /api/capitan/v1/basic/target/stock:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.StockDetailList'
      security:
      - JWT: []
      summary: Get target stocks
      tags:
      - Basic V1
  /api/capitan/v1/event/login:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginEventList'
      security:
      - JWT: []
      summary: Get login events
      tags:
      - Event V1
  /api/capitan/v1/event/shioaji:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.ShioajiEventList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get shioaji events
      tags:
      - Event V1
  /api/capitan/v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pb.APIResponse'
      summary: Login
      tags:
      - User V1
  /api/capitan/v1/logout:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
      summary: Logout
      tags:
      - User V1
  /api/capitan/v1/refresh:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Refresh token
      tags:
      - User V1
  /api/capitan/v1/system/backup:
    delete:
      consumes:
      - application/json
      parameters:
      - description: backup-name
        in: header
        name: backup-name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Delete backup
      tags:
      - System V1
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.BackupList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: List backup
      tags:
      - System V1
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.Backup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Restore backup
      tags:
      - System V1
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Create backup
      tags:
      - System V1
  /api/capitan/v1/system/backup/download:
    get:
      consumes:
      - application/json
      parameters:
      - description: backup-name
        in: header
        name: backup-name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Download backup
      tags:
      - System V1
  /api/capitan/v1/system/backup/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Upload backup
      tags:
      - System V1
  /api/capitan/v1/system/info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.SystemInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get system info
      tags:
      - System V1
  /api/capitan/v1/trade/buy/future:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.OrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.Trade'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Buy future
      tags:
      - Trade V1
  /api/capitan/v1/trade/cancel:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.Trade'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.Trade'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Cancel trade
      tags:
      - Trade V1
  /api/capitan/v1/trade/future/position:
    get:
      consumes:
      - application/json
      parameters:
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.FuturePositionList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get all future positions
      tags:
      - Trade V1
  /api/capitan/v1/trade/margin:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.Margin'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get margin information
      tags:
      - Trade V1
  /api/capitan/v1/trade/records:
    get:
      consumes:
      - application/json
      parameters:
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.TradeList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get all trade records
      tags:
      - Trade V1
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.QueryTradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.TradeList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get trade records by request
      tags:
      - Trade V1
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get trade records by request
      tags:
      - Trade V1
  /api/capitan/v1/trade/sell/future:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.OrderDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.Trade'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Sell future
      tags:
      - Trade V1
  /api/capitan/v1/user:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Delete user by username
      tags:
      - User V1
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: New user
      tags:
      - User V1
    put:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Update user except password
      tags:
      - User V1
  /api/capitan/v1/user/list:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pb.UserList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Get all user
      tags:
      - User V1
  /api/capitan/v1/user/password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/pb.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/emptypb.Empty'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/pb.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pb.APIResponse'
      security:
      - JWT: []
      summary: Update user password
      tags:
      - User V1
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
