// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/capitan/v1/basic/contract/future": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get all future contracts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.FutureContractList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Update future contract",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.FutureContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Create future contract",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.FutureContract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Delete future contract",
                "parameters": [
                    {
                        "description": "id(int) of contract",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structpb.ListValue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/future/kbar": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get future kbar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.HistoryKbarList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/future/kbar/last": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get last futures kbar",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.HistoryKbarList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/futures": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get futures",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.FutureDetailList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Update futures",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateFutureDetailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/options": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get options",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.OptionDetailList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/stocks": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get stocks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.StockDetailList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/target/future": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get target futures",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.FutureDetailList"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/basic/target/stock": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Basic V1"
                ],
                "summary": "Get target stocks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.StockDetailList"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/event/login": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event V1"
                ],
                "summary": "Get login events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginEventList"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/event/shioaji": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event V1"
                ],
                "summary": "Get shioaji events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.ShioajiEventList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/logout": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/refresh": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/system/backup": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "List backup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.BackupList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Create backup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Restore backup",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.Backup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Delete backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "backup-name",
                        "name": "backup-name",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/system/backup/download": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Download backup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "backup-name",
                        "name": "backup-name",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/system/backup/upload": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Upload backup",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/system/info": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System V1"
                ],
                "summary": "Get system info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.SystemInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/buy/future": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Buy future",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.OrderDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.Trade"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/cancel": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Cancel trade",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.Trade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.Trade"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/future/position": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Get all future positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.FuturePositionList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/margin": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Get margin information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.Margin"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/records": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Get all trade records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.TradeList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Get trade records by request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Get trade records by request",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.QueryTradeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.TradeList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/trade/sell/future": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trade V1"
                ],
                "summary": "Sell future",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.OrderDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.Trade"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/user": {
            "put": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Update user except password",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "New user",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Delete user by username",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/user/list": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Get all user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pb.UserList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/capitan/v1/user/password": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User V1"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "description": "Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/emptypb.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pb.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "emptypb.Empty": {
            "type": "object"
        },
        "pb.APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "response": {
                    "type": "string"
                }
            }
        },
        "pb.Backup": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "pb.BackupList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Backup"
                    }
                }
            }
        },
        "pb.BasicUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/pb.UserRole"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pb.ChangePasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pb.DayTrade": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "DayTrade_DAY_TRADE_UNKNOWN",
                "DayTrade_DAY_TRADE_YES",
                "DayTrade_DAY_TRADE_ONLY_BUY",
                "DayTrade_DAY_TRADE_NO"
            ]
        },
        "pb.FetchStatus": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "FetchStatus_FETCH_STATUS_UNKNOWN",
                "FetchStatus_FETCH_STATUS_FETCHED",
                "FetchStatus_FETCH_STATUS_FETCHING",
                "FetchStatus_FETCH_STATUS_UNFETCH"
            ]
        },
        "pb.FutureContract": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "fee": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "initial_margin": {
                    "type": "integer"
                },
                "maintenance_margin": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_per_tick": {
                    "type": "number"
                },
                "tax": {
                    "type": "number"
                },
                "updated_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "pb.FutureContractList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.FutureContract"
                    }
                }
            }
        },
        "pb.FutureDetail": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "contract": {
                    "$ref": "#/definitions/pb.FutureContract"
                },
                "contract_id": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "day_trade": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_month": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "limit_down": {
                    "type": "number"
                },
                "limit_up": {
                    "type": "number"
                },
                "margin_trading_balance": {
                    "type": "integer"
                },
                "multiplier": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "option_right": {
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "security_type": {
                    "type": "string"
                },
                "short_selling_balance": {
                    "type": "integer"
                },
                "strike_price": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "target_code": {
                    "type": "string"
                },
                "underlying_code": {
                    "type": "string"
                },
                "underlying_kind": {
                    "type": "string"
                },
                "unit": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "pb.FutureDetailList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.FutureDetail"
                    }
                }
            }
        },
        "pb.FuturePosition": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "direction": {
                    "$ref": "#/definitions/pb.OrderAction"
                },
                "id": {
                    "type": "integer"
                },
                "last_price": {
                    "type": "number"
                },
                "pnl": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "pb.FuturePositionList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.FuturePosition"
                    }
                }
            }
        },
        "pb.HistoryKbar": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "code": {
                    "type": "string"
                },
                "high": {
                    "type": "number"
                },
                "kbar_time": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "volume": {
                    "type": "integer"
                }
            }
        },
        "pb.HistoryKbarList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.HistoryKbar"
                    }
                }
            }
        },
        "pb.LoginEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "id": {
                    "type": "integer"
                },
                "ip": {
                    "type": "string"
                },
                "resp_code": {
                    "$ref": "#/definitions/pb.LoginRespCode"
                },
                "user": {
                    "$ref": "#/definitions/pb.User"
                }
            }
        },
        "pb.LoginEventList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.LoginEvent"
                    }
                }
            }
        },
        "pb.LoginRequest": {
            "type": "object",
            "properties": {
                "mfa_code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pb.LoginRespCode": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "LoginRespCode_LOGIN_RESP_CODE_OK",
                "LoginRespCode_LOGIN_RESP_CODE_PASSWORD_INCORRECT",
                "LoginRespCode_LOGIN_RESP_CODE_USER_NOT_FOUND",
                "LoginRespCode_LOGIN_RESP_CODE_DB_ERROR",
                "LoginRespCode_LOGIN_RESP_CODE_MFA_FAILED"
            ]
        },
        "pb.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "expire": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "pb.Margin": {
            "type": "object",
            "properties": {
                "available_margin": {
                    "type": "number"
                },
                "collateral_amount": {
                    "type": "number"
                },
                "deposit_withdrawal": {
                    "type": "number"
                },
                "equity": {
                    "type": "number"
                },
                "equity_amount": {
                    "type": "number"
                },
                "fee": {
                    "type": "number"
                },
                "future_open_position": {
                    "type": "number"
                },
                "future_settle_profitloss": {
                    "type": "number"
                },
                "initial_margin": {
                    "type": "number"
                },
                "maintenance_margin": {
                    "type": "number"
                },
                "margin_call": {
                    "type": "number"
                },
                "option_open_position": {
                    "type": "number"
                },
                "option_openbuy_market_value": {
                    "type": "number"
                },
                "option_opensell_market_value": {
                    "type": "number"
                },
                "option_settle_profitloss": {
                    "type": "number"
                },
                "order_margin_premium": {
                    "type": "number"
                },
                "plus_margin": {
                    "type": "number"
                },
                "plus_margin_indicator": {
                    "type": "number"
                },
                "risk_indicator": {
                    "type": "number"
                },
                "royalty_revenue_expenditure": {
                    "type": "number"
                },
                "security_collateral_amount": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/pb.FetchStatus"
                },
                "tax": {
                    "type": "number"
                },
                "today_balance": {
                    "type": "number"
                },
                "today_future_open_position": {
                    "type": "number"
                },
                "yesterday_balance": {
                    "type": "number"
                }
            }
        },
        "pb.OptionDetail": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "day_trade": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_month": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "limit_down": {
                    "type": "number"
                },
                "limit_up": {
                    "type": "number"
                },
                "margin_trading_balance": {
                    "type": "integer"
                },
                "multiplier": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "option_right": {
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "security_type": {
                    "type": "string"
                },
                "short_selling_balance": {
                    "type": "integer"
                },
                "strike_price": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "target_code": {
                    "type": "string"
                },
                "underlying_code": {
                    "type": "string"
                },
                "underlying_kind": {
                    "type": "string"
                },
                "unit": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "pb.OptionDetailList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.OptionDetail"
                    }
                }
            }
        },
        "pb.OrderAction": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "OrderAction_ORDER_ACTION_UNKNOWN",
                "OrderAction_ORDER_ACTION_BUY",
                "OrderAction_ORDER_ACTION_SELL"
            ]
        },
        "pb.OrderDetail": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/pb.OrderAction"
                },
                "auto_cancel": {
                    "type": "boolean"
                },
                "auto_cancel_seconds": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "retry": {
                    "type": "boolean"
                }
            }
        },
        "pb.OrderStatus": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "x-enum-varnames": [
                "OrderStatus_ORDER_STATUS_UNKNOWN",
                "OrderStatus_ORDER_STATUS_CANCELLED",
                "OrderStatus_ORDER_STATUS_FILLED",
                "OrderStatus_ORDER_STATUS_PART_FILLED",
                "OrderStatus_ORDER_STATUS_INACTIVE",
                "OrderStatus_ORDER_STATUS_FAILED",
                "OrderStatus_ORDER_STATUS_PENDING_SUBMIT",
                "OrderStatus_ORDER_STATUS_PRE_SUBMITTED",
                "OrderStatus_ORDER_STATUS_SUBMITTED"
            ]
        },
        "pb.OrderType": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "OrderType_ORDER_TYPE_UNKNOWN",
                "OrderType_ORDER_TYPE_STOCK_LOT",
                "OrderType_ORDER_TYPE_STOCK_SHARE",
                "OrderType_ORDER_TYPE_FUTURE",
                "OrderType_ORDER_TYPE_OPTION"
            ]
        },
        "pb.QueryTradeRequest": {
            "type": "object",
            "properties": {
                "end_time": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "order_id": {
                    "type": "string"
                },
                "start_time": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "pb.ShioajiEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "event": {
                    "type": "string"
                },
                "event_code": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "resp_code": {
                    "type": "integer"
                }
            }
        },
        "pb.ShioajiEventList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.ShioajiEvent"
                    }
                }
            }
        },
        "pb.StockDetail": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "day_trade": {
                    "$ref": "#/definitions/pb.DayTrade"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_month": {
                    "type": "string"
                },
                "exchange": {
                    "type": "string"
                },
                "limit_down": {
                    "type": "number"
                },
                "limit_up": {
                    "type": "number"
                },
                "margin_trading_balance": {
                    "type": "integer"
                },
                "multiplier": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "option_right": {
                    "type": "string"
                },
                "reference": {
                    "type": "number"
                },
                "security_type": {
                    "type": "string"
                },
                "short_selling_balance": {
                    "type": "integer"
                },
                "strike_price": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                },
                "target_code": {
                    "type": "string"
                },
                "underlying_code": {
                    "type": "string"
                },
                "underlying_kind": {
                    "type": "string"
                },
                "unit": {
                    "type": "integer"
                },
                "update_date": {
                    "type": "string"
                }
            }
        },
        "pb.StockDetailList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.StockDetail"
                    }
                }
            }
        },
        "pb.SystemBuild": {
            "type": "object",
            "properties": {
                "commit": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "pb.SystemInfo": {
            "type": "object",
            "properties": {
                "core": {
                    "$ref": "#/definitions/pb.SystemBuild"
                },
                "disk_usage": {
                    "type": "number"
                },
                "launch_time": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "web": {
                    "$ref": "#/definitions/pb.SystemBuild"
                }
            }
        },
        "pb.Trade": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/pb.OrderAction"
                },
                "code": {
                    "type": "string"
                },
                "filled_quantity": {
                    "type": "integer"
                },
                "future": {
                    "$ref": "#/definitions/pb.FutureDetail"
                },
                "option": {
                    "$ref": "#/definitions/pb.OptionDetail"
                },
                "order_id": {
                    "type": "string"
                },
                "order_time": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/pb.OrderStatus"
                },
                "stock": {
                    "$ref": "#/definitions/pb.StockDetail"
                },
                "type": {
                    "$ref": "#/definitions/pb.OrderType"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "pb.TradeList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.Trade"
                    }
                }
            }
        },
        "pb.UpdateFutureDetailRequest": {
            "type": "object",
            "properties": {
                "codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "contract_id": {
                    "type": "integer"
                }
            }
        },
        "pb.User": {
            "type": "object",
            "properties": {
                "basic": {
                    "$ref": "#/definitions/pb.BasicUser"
                },
                "created_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                },
                "enable_totp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "totp_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "$ref": "#/definitions/timestamppb.Timestamp"
                }
            }
        },
        "pb.UserList": {
            "type": "object",
            "properties": {
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pb.User"
                    }
                }
            }
        },
        "pb.UserRole": {
            "type": "integer",
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "UserRole_USER_ROLE_UNKNOWN",
                "UserRole_USER_ROLE_USER",
                "UserRole_USER_ROLE_ADMIN",
                "UserRole_USER_ROLE_ROOT"
            ]
        },
        "structpb.ListValue": {
            "type": "object",
            "properties": {
                "values": {
                    "description": "Repeated field of dynamically typed values.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structpb.Value"
                    }
                }
            }
        },
        "structpb.Value": {
            "type": "object",
            "properties": {
                "kind": {
                    "description": "The kind of value.\n\nTypes that are valid to be assigned to Kind:\n\n\t*Value_NullValue\n\t*Value_NumberValue\n\t*Value_StringValue\n\t*Value_BoolValue\n\t*Value_StructValue\n\t*Value_ListValue"
                }
            }
        },
        "timestamppb.Timestamp": {
            "type": "object",
            "properties": {
                "nanos": {
                    "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
                    "type": "integer"
                },
                "seconds": {
                    "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Capitan V1 OpenAPI",
	Description:      "Capitan V1 Srv's API docs",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
